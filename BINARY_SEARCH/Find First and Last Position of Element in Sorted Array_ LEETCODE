// https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/



class Solution
{
public:
    vector<int> searchRange(vector<int> &arr, int target)
    {

        int first = -1;
        int second = -1;

        vector<int> ans;

        int start = 0;
        int end = arr.size() - 1;
// FINDING FIRST POSITION , SEE LINE 27 , ELSE IT IS SIMILAR TO BINARY SEARCH
        while (start <= end)
        {

            int mid = start + (end - start) / 2;

            if (arr[mid] == target)
            {
                first = mid;
                end = mid - 1;
            }

            else if (arr[mid] > target)
            {
                end = mid - 1;
            }

            else
            {
                start = mid + 1;
            }
        }
        start = 0;
        end = arr.size() - 1;
// FINDING LAST POSITION , SEE LINE 53 , ELSE IT IS SIMILAR TO BINARY SEARCH

        while (start <= end)
        {

            int mid = start + (end - start) / 2;

            if (arr[mid] == target)
            {
                second = mid;
                // end = mid -1;
                start = mid + 1;
            }

            else if (arr[mid] > target)
            {
                end = mid - 1;
            }

            else
            {
                start = mid + 1;
            }
        }


ans.push_back(first);
ans.push_back(second);

return ans;

    }
};
