// https://leetcode.com/problems/peak-index-in-a-mountain-array/
// 852. Peak Index in a Mountain Array



class Solution
{

public:
    int peakIndexInMountainArray(vector<int> &arr)
    {

        int start = 0;
        int end = arr.size() - 1;
int n = arr.size();
        int maxi = -1;

        while (start <= end)
        {

            int mid = start + (end - start) / 2;

            if (arr[mid] > arr[mid - 1] && arr[mid] > arr[mid + 1] && mid - 1 >= 0 && mid + 1 < n)
            {

                return mid;
            }

            else if (arr[mid] > arr[mid - 1])
            {

                start = mid ;
            }

            else
            {
                end = mid ;
            }
        }

        return 0;

        return maxi;
    }
};



// Almost same approach with same T.C , but only a few lines of code
/*
  int peakIndexInMountainArray(vector<int> A) {
        int l = 0, r = A.size() - 1, mid;
        while (l < r) {
            mid = (l + r) / 2;
            if (A[mid] < A[mid + 1])
                l = mid + 1;
            else
                r = mid;
        }
        return l;
    }
    */
